name: Deploy to Azure

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: savoira-dev-app
  AZURE_RESOURCE_GROUP: savoira-dev-rg
  AZURE_LOCATION: eastus
  CONTAINER_REGISTRY: savoiradev.azurecr.io
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.CONTAINER_REGISTRY }}/savoira-dev-app
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./packages/twenty-docker/twenty/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          REACT_APP_SERVER_BASE_URL=${{ secrets.REACT_APP_SERVER_BASE_URL }}
          APP_VERSION=${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        containerAppName: ${{ env.AZURE_WEBAPP_NAME }}
        imageToDeploy: ${{ needs.build.outputs.image-tag }}
        environmentVariables: |
          PG_DATABASE_URL=${{ secrets.PG_DATABASE_URL }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          LOGIN_TOKEN_SECRET=${{ secrets.LOGIN_TOKEN_SECRET }}
          FILE_TOKEN_SECRET=${{ secrets.FILE_TOKEN_SECRET }}
          SAVOIRA_POSTGRES_ADMIN_PASSWORD=${{ secrets.SAVOIRA_POSTGRES_ADMIN_PASSWORD }}
          STORAGE_TYPE=local
          MESSAGE_QUEUE_TYPE=redis
          REACT_APP_SERVER_BASE_URL=${{ secrets.REACT_APP_SERVER_BASE_URL }}
          IS_BILLING_ENABLED=false
        targetPort: 3000
        ingress: external